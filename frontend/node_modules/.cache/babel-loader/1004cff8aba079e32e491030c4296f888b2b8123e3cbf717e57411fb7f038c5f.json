{"ast":null,"code":"var _jsxFileName = \"/Users/neelam/CRUD/contact-manager/frontend/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { fetchTasks, deleteTask, updateTask } from \"../taskApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskList({\n  onEdit\n}) {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const loadTasks = async () => {\n    const res = await fetchTasks();\n    setTasks(res.data);\n  };\n  useEffect(() => {\n    loadTasks();\n  }, []);\n  const handleDelete = async id => {\n    await deleteTask(id);\n    loadTasks();\n  };\n  const toggleComplete = async task => {\n    await updateTask(task.id, {\n      ...task,\n      completed: !task.completed\n    });\n    loadTasks();\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: task.completed,\n        onChange: () => toggleComplete(task)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          textDecoration: task.completed ? \"line-through\" : \"none\"\n        },\n        children: [task.title, \": \", task.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onEdit(task),\n        children: \"\\u270F\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(task.id),\n        children: \"\\uD83D\\uDDD1\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","fetchTasks","deleteTask","updateTask","jsxDEV","_jsxDEV","TaskList","onEdit","_s","tasks","setTasks","loadTasks","res","data","handleDelete","id","toggleComplete","task","completed","children","map","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","style","textDecoration","title","description","onClick","_c","$RefreshReg$"],"sources":["/Users/neelam/CRUD/contact-manager/frontend/src/components/TaskList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { fetchTasks, deleteTask, updateTask } from \"../taskApi\";\n\nexport default function TaskList({ onEdit }) {\n    const [tasks, setTasks] = useState([]);\n\n    const loadTasks = async () => {\n        const res = await fetchTasks();\n        setTasks(res.data);\n    };\n\n    useEffect(() => {\n        loadTasks();\n    }, []);\n\n    const handleDelete = async (id) => {\n        await deleteTask(id);\n        loadTasks();\n    };\n\n    const toggleComplete = async (task) => {\n        await updateTask(task.id, { ...task, completed: !task.completed });\n        loadTasks();\n    };\n\n    return (\n        <ul>\n            {tasks.map((task) => (\n                <li key={task.id}>\n                    <input\n                        type=\"checkbox\"\n                        checked={task.completed}\n                        onChange={() => toggleComplete(task)}\n                    />\n                    <span style={{ textDecoration: task.completed ? \"line-through\" : \"none\" }}>\n                        {task.title}: {task.description}\n                    </span>\n                    <button onClick={() => onEdit(task)}>‚úèÔ∏è</button>\n                    <button onClick={() => handleDelete(task.id)}>üóëÔ∏è</button>\n                </li>\n            ))}\n        </ul>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,EAAEC,UAAU,EAAEC,UAAU,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,eAAe,SAASC,QAAQA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAMC,GAAG,GAAG,MAAMX,UAAU,CAAC,CAAC;IAC9BS,QAAQ,CAACE,GAAG,CAACC,IAAI,CAAC;EACtB,CAAC;EAEDd,SAAS,CAAC,MAAM;IACZY,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,YAAY,GAAG,MAAOC,EAAE,IAAK;IAC/B,MAAMb,UAAU,CAACa,EAAE,CAAC;IACpBJ,SAAS,CAAC,CAAC;EACf,CAAC;EAED,MAAMK,cAAc,GAAG,MAAOC,IAAI,IAAK;IACnC,MAAMd,UAAU,CAACc,IAAI,CAACF,EAAE,EAAE;MAAE,GAAGE,IAAI;MAAEC,SAAS,EAAE,CAACD,IAAI,CAACC;IAAU,CAAC,CAAC;IAClEP,SAAS,CAAC,CAAC;EACf,CAAC;EAED,oBACIN,OAAA;IAAAc,QAAA,EACKV,KAAK,CAACW,GAAG,CAAEH,IAAI,iBACZZ,OAAA;MAAAc,QAAA,gBACId,OAAA;QACIgB,IAAI,EAAC,UAAU;QACfC,OAAO,EAAEL,IAAI,CAACC,SAAU;QACxBK,QAAQ,EAAEA,CAAA,KAAMP,cAAc,CAACC,IAAI;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,eACFtB,OAAA;QAAMuB,KAAK,EAAE;UAAEC,cAAc,EAAEZ,IAAI,CAACC,SAAS,GAAG,cAAc,GAAG;QAAO,CAAE;QAAAC,QAAA,GACrEF,IAAI,CAACa,KAAK,EAAC,IAAE,EAACb,IAAI,CAACc,WAAW;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACPtB,OAAA;QAAQ2B,OAAO,EAAEA,CAAA,KAAMzB,MAAM,CAACU,IAAI,CAAE;QAAAE,QAAA,EAAC;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChDtB,OAAA;QAAQ2B,OAAO,EAAEA,CAAA,KAAMlB,YAAY,CAACG,IAAI,CAACF,EAAE,CAAE;QAAAI,QAAA,EAAC;MAAG;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAVrDV,IAAI,CAACF,EAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWZ,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEb;AAACnB,EAAA,CAxCuBF,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}