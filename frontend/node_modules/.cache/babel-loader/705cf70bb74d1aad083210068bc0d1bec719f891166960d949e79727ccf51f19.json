{"ast":null,"code":"var _jsxFileName = \"/Users/neelam/CRUD/contact-manager/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TaskForm from \"./components/TaskForm\";\nimport TaskList from \"./components/TaskList\";\nimport { createTask, updateTask } from \"./taskApi\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [editingTask, setEditingTask] = useState(null);\n  const handleSave = async data => {\n    if (editingTask) {\n      await updateTask(editingTask.id, {\n        ...editingTask,\n        ...data\n      });\n      setEditingTask(null);\n    } else {\n      await createTask(data);\n    }\n    window.location.reload(); // Simplified refresh\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDCDD Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onSubmit: handleSave,\n      initialTask: editingTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      onEdit: setEditingTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"vUyg4d9ntB/IZjAsi+4xqcH9bXA=\");\n_c = App;\nexport default App;\n\n// import React, { useState, useEffect } from 'react';\n// import { fetchContacts, createContact, updateContact, deleteContact } from './api';\n// import ContactForm from './components/ContactForm';\n// import ContactList from './components/ContactList';\n\n// function App() {\n//     const [contacts, setContacts] = useState([]);\n//     const [editing, setEditing] = useState(null);\n\n//     useEffect(() => {\n//         fetchContacts().then(res => setContacts(res.data));\n//     }, []);\n\n//     const handleSubmit = async (data) => {\n//         if (editing) {\n//             const res = await updateContact(editing.id, data);\n//             setContacts(contacts.map(c => c.id === editing.id ? res.data : c));\n//         } else {\n//             const res = await createContact(data);\n//             setContacts([...contacts, res.data]);\n//         }\n//         setEditing(null);\n//     };\n\n//     const handleDelete = async id => {\n//         await deleteContact(id);\n//         setContacts(contacts.filter(c => c.id !== id));\n//     };\n\n//     return (\n//         <div className=\"App\">\n//             <h1>Contact Manager</h1>\n//             <ContactForm onSubmit={handleSubmit} editing={editing} cancel={() => setEditing(null)} />\n//             <ContactList contacts={contacts} onEdit={setEditing} onDelete={handleDelete} />\n//         </div>\n//     );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TaskForm","TaskList","createTask","updateTask","jsxDEV","_jsxDEV","App","_s","editingTask","setEditingTask","handleSave","data","id","window","location","reload","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","initialTask","onEdit","_c","$RefreshReg$"],"sources":["/Users/neelam/CRUD/contact-manager/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport TaskForm from \"./components/TaskForm\";\nimport TaskList from \"./components/TaskList\";\nimport { createTask, updateTask } from \"./taskApi\";\nimport './App.css';\n\nfunction App() {\n    const [editingTask, setEditingTask] = useState(null);\n\n    const handleSave = async (data) => {\n        if (editingTask) {\n            await updateTask(editingTask.id, { ...editingTask, ...data });\n            setEditingTask(null);\n        } else {\n            await createTask(data);\n        }\n        window.location.reload(); // Simplified refresh\n    };\n\n    return (\n        <div style={{ padding: \"20px\" }}>\n            <h1>üìù Task Manager</h1>\n            <TaskForm onSubmit={handleSave} initialTask={editingTask} />\n            <TaskList onEdit={setEditingTask} />\n        </div>\n    );\n}\n\nexport default App;\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import { fetchContacts, createContact, updateContact, deleteContact } from './api';\n// import ContactForm from './components/ContactForm';\n// import ContactList from './components/ContactList';\n\n// function App() {\n//     const [contacts, setContacts] = useState([]);\n//     const [editing, setEditing] = useState(null);\n\n//     useEffect(() => {\n//         fetchContacts().then(res => setContacts(res.data));\n//     }, []);\n\n//     const handleSubmit = async (data) => {\n//         if (editing) {\n//             const res = await updateContact(editing.id, data);\n//             setContacts(contacts.map(c => c.id === editing.id ? res.data : c));\n//         } else {\n//             const res = await createContact(data);\n//             setContacts([...contacts, res.data]);\n//         }\n//         setEditing(null);\n//     };\n\n//     const handleDelete = async id => {\n//         await deleteContact(id);\n//         setContacts(contacts.filter(c => c.id !== id));\n//     };\n\n//     return (\n//         <div className=\"App\">\n//             <h1>Contact Manager</h1>\n//             <ContactForm onSubmit={handleSubmit} editing={editing} cancel={() => setEditing(null)} />\n//             <ContactList contacts={contacts} onEdit={setEditing} onDelete={handleDelete} />\n//         </div>\n//     );\n// }\n\n// export default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAASC,UAAU,EAAEC,UAAU,QAAQ,WAAW;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMW,UAAU,GAAG,MAAOC,IAAI,IAAK;IAC/B,IAAIH,WAAW,EAAE;MACb,MAAML,UAAU,CAACK,WAAW,CAACI,EAAE,EAAE;QAAE,GAAGJ,WAAW;QAAE,GAAGG;MAAK,CAAC,CAAC;MAC7DF,cAAc,CAAC,IAAI,CAAC;IACxB,CAAC,MAAM;MACH,MAAMP,UAAU,CAACS,IAAI,CAAC;IAC1B;IACAE,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC;EAED,oBACIV,OAAA;IAAKW,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC5Bb,OAAA;MAAAa,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBjB,OAAA,CAACL,QAAQ;MAACuB,QAAQ,EAAEb,UAAW;MAACc,WAAW,EAAEhB;IAAY;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5DjB,OAAA,CAACJ,QAAQ;MAACwB,MAAM,EAAEhB;IAAe;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEd;AAACf,EAAA,CApBQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAsBZ,eAAeA,GAAG;;AAIlB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}